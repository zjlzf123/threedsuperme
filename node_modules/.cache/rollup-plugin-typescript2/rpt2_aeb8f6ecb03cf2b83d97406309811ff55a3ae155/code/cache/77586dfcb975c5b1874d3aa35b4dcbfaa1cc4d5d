{"code":"import { __awaiter, __generator, __read, __values } from \"tslib\";\r\nimport * as ASDK from \"./asdk\";\r\nimport { _splitPipeline, _delete_parameters_duplicates, _getDefault, _now, _getAvatarExport, generateExportParameters, generateVisualExportParameters, } from \"./utils\";\r\nvar AUTH_URL = \"https://api.avatarsdk.com/o/token/\";\r\nvar API_URL = \"https://api.avatarsdk.com/\";\r\nvar stored_client_id = \"wl9sluOVVNMHtdyqOWnERP5RgukcKPbJUebgJJxe\";\r\nvar stored_client_secret = \"6WBxXOq3lghNyDGadIuf2BzX9harUrO1RMd6sQ05NYBJAldm0EsywuT47k9IiaEaqE0RMRILumTv0ygN3ZVfpoiyoYkW4LHfhp3lmmJkN3mMIZJkP9aMUOCmjuIgeUM5\";\r\nvar pipelineValue = \"head_1.2 | base/static\";\r\nfunction getToken() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var stored_token, expired, auth, headers, auth_form;\r\n        return __generator(this, function (_a) {\r\n            stored_token = localStorage.getItem(\"access_token\");\r\n            if (!!stored_token) {\r\n                stored_token = JSON.parse(stored_token);\r\n                expired = _now() >= stored_token.expires - 60 * 5;\r\n                if (!expired) {\r\n                    return [2 /*return*/, stored_token.access_token];\r\n                }\r\n                else {\r\n                    localStorage.removeItem(\"access_token\");\r\n                }\r\n            }\r\n            auth = \"Basic \" + btoa(stored_client_id + \":\" + stored_client_secret);\r\n            headers = {\r\n                Authorization: auth,\r\n            };\r\n            auth_form = new FormData();\r\n            auth_form.append(\"grant_type\", \"client_credentials\");\r\n            // token 鉴权\r\n            return [2 /*return*/, fetch(AUTH_URL, {\r\n                    headers: headers,\r\n                    method: \"POST\",\r\n                    body: auth_form,\r\n                })\r\n                    .then(function (rsp) { return rsp.json(); })\r\n                    .then(function (rsp) {\r\n                    rsp.expires = _now() + rsp.expires_in;\r\n                    localStorage.setItem(\"access_token\", JSON.stringify(rsp));\r\n                    return rsp.access_token;\r\n                })];\r\n        });\r\n    });\r\n}\r\nfunction initASDK(token) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var asdk, _a, pipeline, subtype, parametersPromise, exportParametersPromise;\r\n        return __generator(this, function (_b) {\r\n            asdk = new ASDK.AvatarSDK(token, API_URL);\r\n            _a = __read(_splitPipeline(pipelineValue), 2), pipeline = _a[0], subtype = _a[1];\r\n            parametersPromise = asdk.get_available_parameters(pipeline, subtype);\r\n            exportParametersPromise = asdk.get_available_export_parameters(pipeline, subtype);\r\n            return [2 /*return*/, Promise.all([parametersPromise, exportParametersPromise]).then(function (promises) {\r\n                    var _a = __read(promises, 2), parameters = _a[0], exportParameters = _a[1];\r\n                    parameters = _delete_parameters_duplicates(parameters, exportParameters);\r\n                    return { parameters: parameters, asdk: asdk };\r\n                })];\r\n        });\r\n    });\r\n}\r\nfunction uploadFile(photo, token, returnDataType, onCompletedProgress, onExportProgress, callback) {\r\n    if (returnDataType === void 0) { returnDataType = \"fileBlob\"; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var asdk, parameters, _a, pipeline, subtype, export_parameters, visual_export_parameters, onProgress;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, initASDK(token)];\r\n                case 1:\r\n                    asdk = (_b.sent()).asdk;\r\n                    parameters = JSON.stringify({});\r\n                    _a = __read(_splitPipeline(pipelineValue), 2), pipeline = _a[0], subtype = _a[1];\r\n                    export_parameters = generateExportParameters({\r\n                        format: \"obj\",\r\n                        embed: true,\r\n                        pointclouds: false,\r\n                        additional_textures: {\r\n                            roughness_map: false,\r\n                            metallic_map: false,\r\n                            lips_mask: false,\r\n                        },\r\n                        embed_textures: false,\r\n                        texture_size: { enabled: false, value: { width: 0, height: 0 } },\r\n                        lod: { enabled: false, value: 0 },\r\n                    });\r\n                    visual_export_parameters = generateVisualExportParameters(export_parameters);\r\n                    export_parameters = JSON.stringify([\r\n                        visual_export_parameters,\r\n                        export_parameters,\r\n                    ]);\r\n                    onProgress = function (a) {\r\n                        onCompletedProgress && onCompletedProgress(a);\r\n                    };\r\n                    asdk\r\n                        .create_avatar(\"test\", photo, pipeline, subtype, parameters, export_parameters)\r\n                        .then(function (avatar) { return asdk.poll_avatar(avatar, onProgress); })\r\n                        .then(function (avatar) { return asdk.get_exports(avatar); })\r\n                        .then(function (exports) {\r\n                        return _getAvatarExport(exports, asdk);\r\n                    })\r\n                        .then(function (avatarExport) {\r\n                        var e_1, _a, e_2, _b, e_3, _c;\r\n                        if (returnDataType === \"fileBlob\") {\r\n                            var avatarExportFile = undefined;\r\n                            try {\r\n                                for (var _d = __values(avatarExport[\"files\"]), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                                    var exportFile = _e.value;\r\n                                    if (exportFile[\"identity\"] !== \"avatar\")\r\n                                        continue;\r\n                                    avatarExportFile = exportFile;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                            finally {\r\n                                try {\r\n                                    if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n                                }\r\n                                finally { if (e_1) throw e_1.error; }\r\n                            }\r\n                            var onProgress_1 = function (stage, pct) {\r\n                                onExportProgress &&\r\n                                    onExportProgress({\r\n                                        stage: stage,\r\n                                        pct: pct,\r\n                                    });\r\n                            };\r\n                            asdk\r\n                                .get_export_file_contents(avatarExportFile, onProgress_1)\r\n                                .then(function (modelFiles) {\r\n                                callback && callback(modelFiles);\r\n                            });\r\n                        }\r\n                        else {\r\n                            var exportFiles = avatarExport[\"files\"].reduce(function (a, i) {\r\n                                var cat = i[\"category\"] || \"avatar\";\r\n                                var k = i[\"identity\"];\r\n                                _getDefault(a, cat, {})[k] = i;\r\n                                return a;\r\n                            }, {});\r\n                            try {\r\n                                for (var _f = __values(Object.entries(exportFiles)), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                                    var _h = __read(_g.value, 2), cat = _h[0], catEntries = _h[1];\r\n                                    try {\r\n                                        for (var _j = (e_3 = void 0, __values(Object.entries(catEntries))), _k = _j.next(); !_k.done; _k = _j.next()) {\r\n                                            var _l = __read(_k.value, 2), identity = _l[0], ef = _l[1];\r\n                                            var url = ef.file;\r\n                                            var filename = url.split(\"/\");\r\n                                            filename = filename[filename.length - 1];\r\n                                            asdk\r\n                                                .download_export_file(url, filename, false)\r\n                                                .then(function (link) {\r\n                                                callback && callback(link);\r\n                                            })\r\n                                                .catch(function (err) {\r\n                                                console.error(err);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                                    finally {\r\n                                        try {\r\n                                            if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\r\n                                        }\r\n                                        finally { if (e_3) throw e_3.error; }\r\n                                    }\r\n                                }\r\n                            }\r\n                            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                            finally {\r\n                                try {\r\n                                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\r\n                                }\r\n                                finally { if (e_2) throw e_2.error; }\r\n                            }\r\n                        }\r\n                    })\r\n                        .catch(function (err) {\r\n                        console.error(\"catch error:\", err);\r\n                    });\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction threedsuperme(file, _a) {\r\n    var returnDataType = _a.returnDataType, onCompletedProgress = _a.onCompletedProgress, onExportProgress = _a.onExportProgress, callback = _a.callback;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var token;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getToken()];\r\n                case 1:\r\n                    token = _b.sent();\r\n                    return [4 /*yield*/, uploadFile(file, token, returnDataType, onCompletedProgress, onExportProgress, callback)];\r\n                case 2: // token\r\n                return [2 /*return*/, _b.sent()]; // file 文件上传\r\n            }\r\n        });\r\n    });\r\n}\r\nexport default threedsuperme;\r\n","references":["/Users/vincent/Desktop/threedsuperme/src/asdk.ts","/Users/vincent/Desktop/threedsuperme/src/utils.ts"],"dts":{"name":"/Users/vincent/Desktop/threedsuperme/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.d.ts","writeByteOrderMark":false,"text":"declare function threedsuperme(file: any, { returnDataType, onCompletedProgress, onExportProgress, callback }: {\r\n    returnDataType: string;\r\n    onCompletedProgress: (data: any) => void;\r\n    onExportProgress: (data: any) => void;\r\n    callback: (data: any) => void;\r\n}): Promise<void>;\r\nexport default threedsuperme;\r\n"}}
